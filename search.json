[{"title":"Learn Markdown","url":"/2018/07/17/learnmarkdown-cn/","content":"\n<!-- Markdown 是 HTML 的父集，所以任何 HTML 文件都是有效的 Markdown。\n这意味着我们可以在 Markdown 里使用任何 HTML 元素，比如注释元素，\n且不会被 Markdown 解析器所影响。不过如果你在 Markdown 文件内创建了 HTML 元素，\n你将无法在 HTML 元素的内容中使用 Markdown 语法。-->\n\n<!-- 在不同的解析器中，Markdown 的实现方法有所不同。\n此教程会指出当某功能是否通用及是否只对某一解析器有效。 -->\n\n<!-- 标头 -->\n<!-- 通过在文本前加上不同数量的hash(#), 你可以创建相对应的 <h1> \n到 <h6> HTML元素。-->\n\n# 这是一个 <h1>\n## 这是一个 <h2>\n### 这是一个 <h3>\n#### 这是一个 <h4>\n##### 这是一个 <h5>\n###### 这是一个 <h6>\n\n<!-- 对于 <h1> 和 <h2> 元素，Markdown 额外提供了两种添加方式。 -->\n这是一个 h1\n=============\n\n这是一个 h2\n-------------\n\n<!-- 简易文本样式 -->\n<!-- 文本的斜体，粗体，和删除线在 Markdown 中可以轻易地被实现。-->\n\n*此文本为斜体。*\n_此文本也是。_\n\n**此文本为粗体。**\n__此文本也是__\n\n***此文本是斜体加粗体。***\n**_或者这样。_**\n*__这个也是！__*\n\n<!-- 在 GitHub 采用的 Markdown 中 -->\n\n~~此文本为删除线效果。~~\n\n<!-- 单个段落由一句或多句邻近的句子组成，这些句子由一个或多个空格分隔。-->\n\n这是第一段落. 这句话在同一个段落里，好玩么？\n\n现在我是第二段落。\n这句话也在第二段落！\n\n这句话在第三段落！\n\n<!-- 如果你插入一个 HTML中的<br />标签，你可以在段末加入两个以上的空格，\n然后另起一段。-->\n\n此段落结尾有两个空格（选中以显示）。  \n\n上文有一个 <br /> ！\n\n<!-- 段落引用可由 > 字符轻松实现。-->\n\n> 这是一个段落引用. 你可以\n> 手动断开你的句子，然后在每句句子前面添加 “>” 字符。或者让你的句子变得很长，以至于他们自动得断开。\n> 只要你的文字以“>” 字符开头，两种方式无异。\n\n> 你也对文本进行\n>> 多层引用\n> 这多机智啊！\n\n<!-- 序列 -->\n<!-- 无序序列可由星号，加号或者减号来建立 -->\n\n* 项目\n* 项目\n* 另一个项目\n\n或者\n\n+ 项目\n+ 项目\n+ 另一个项目\n\n或者 \n\n- 项目\n- 项目\n- 最后一个项目\n\n<!-- 有序序列可由数字加点来实现 -->\n\n1. 项目一\n2. 项目二\n3. 项目三\n\n<!-- 即使你的标签数字有误，Markdown 依旧会呈现出正确的序号，\n不过这并不是一个好主意-->\n\n1. 项目一\n1. 项目二\n1. 项目三\n<!-- (此段与前例一模一样) -->\n\n<!-- 你也可以使用子序列 -->\n\n1. 项目一\n2. 项目二\n3. 项目三\n    * 子项目\n    * 子项目\n4. 项目四\n\n<!-- 代码段落 -->\n<!-- 代码段落（HTML中 <code>标签）可以由缩进四格（spaces）\n或者一个制表符（tab）实现-->\n\n    This is code\n    So is this\n\n<!-- 在你的代码中，你仍然使用tab可以进行缩进操作 -->\n\n    my_array.each do |item|\n        puts item\n    end\n\n<!-- 内联代码可由反引号 ` 实现 -->\n\nJohn 甚至不知道 `go_to()` 方程是干嘛的!\n\n<!-- 在GitHub的 Markdown中，对于代码你可以使用特殊的语法 -->\n\n\\`\\`\\`ruby <!-- 插入时记得移除反斜线， 仅留ruby ！ -->\ndef foobar\n    puts \"Hello world!\"\nend\n\\`\\`\\` <!-- 这里也是，移除反斜线，仅留  -->\n\n<!-- 以上代码不需要缩进，而且 GitHub 会根据后表明的语言来进行语法高亮 -->\n\n<!-- 水平线 （<hr />） -->\n<!-- 水平线可由三个或以上的星号或者减号创建，可带可不带空格。 -->\n\n***\n---\n- - -\n****************\n\n<!-- 链接 -->\n<!-- Markdown 最棒的地方就是简易的链接制作。链接文字放在中括号[]内，\n在随后的括弧()内加入url。-->\n\n[点我点我!](http://test.com/)\n\n<!-- 你也可以为链接加入一个标题：在括弧内使用引号 -->\n\n[点我点我!](http://test.com/ \"连接到Test.com\")\n\n<!-- 相对路径也可以有 -->\n\n[去 music](/music/).\n\n<!-- Markdown同样支持引用样式的链接 -->\n\n[点此链接][link1]以获取更多信息！\n[看一看这个链接][foobar] 如果你愿意的话.\n\n[link1]: http://test.com/ \"Cool!\"\n[foobar]: http://foobar.biz/ \"Alright!\"\n\n<!-- 链接的标题可以处于单引号中，括弧中或是被忽略。引用名可以在文档的任意何处，\n并且可以随意命名，只要名称不重复。-->\n\n<!-- “隐含式命名” 的功能可以让链接文字作为引用名 -->\n\n[This][] is a link.\n\n[this]: http://thisisalink.com/\n\n<!-- 但这并不常用 -->\n\n<!-- 图像 -->\n<!-- 图像与链接相似，只需在前添加一个感叹号 -->\n\n![这是我图像的悬停文本(alt text)](http://imgur.com/myimage.jpg \"可选命名\")\n\n<!-- 引用样式也同样起作用 -->\n\n![这是我的悬停文本.][myimage]\n\n[myimage]: relative/urls/cool/image.jpg \"在此输入标题\"\n\n<!-- 杂项 -->\n<!-- 自动链接 -->\n\n<http://testwebsite.com/> 与\n[http://testwebsite.com/](http://testwebsite.com/) 等同\n\n<!-- 电子邮件的自动链接 -->\n\n<foo@bar.com>\n\n<!-- 转义字符 -->\n\n我希望 *将这段文字置于星号之间* 但是我不希望它被\n斜体化, 所以我就: \\*这段置文字于星号之间\\*。\n\n<!-- 表格 -->\n<!-- 表格只被 GitHub 的 Markdown 支持，并且有一点笨重，但如果你真的要用的话: -->\n\n| 第一列        | 第二列    | 第三列       |\n| :----------   | :------:  | ----------:  |\n| 左对齐        | 居个中    | 右对齐       |\n| 某某某        | 某某某    | 某某某       |\n\n<!-- 或者, 同样的 -->\n\n第一列 | 第二列 | 第三列\n:-- | :-: | --:\n这太丑了 | 药不能 | 停\n\n<!-- 结束! -->\n\n\n","tags":["markdown"]},{"title":"Hello World","url":"/2018/07/16/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]